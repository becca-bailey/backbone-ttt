// Generated by CoffeeScript 1.10.0
var $, Backbone, Game;

require('coffee-script');

Backbone = require('backbone');

$ = require('jquery');

Game = Backbone.Model.extend({
  defaults: {
    board: ['', '', '', '', '', '', '', '', ''],
    status: 'in progress',
    isXTurn: true
  },
  isOver: function() {
    return this.get('status') !== 'in progress';
  },
  changeTurn: function() {
    return this.set({
      'isXTurn': !this.get('isXTurn')
    });
  },
  endTurn: function() {
    this.changeTurn();
    this.computerMove();
    return this.changeTurn();
  },
  getCurrentMarker: function() {
    if (this.get('isXTurn')) {
      return 'X';
    } else {
      return 'O';
    }
  },
  makeMove: function(spotId) {
    var board;
    board = this.get('board');
    board[spotId] = this.getCurrentMarker();
    this.updateBoard(board);
    return this.endTurn();
  },
  updateBoard: function(board) {
    return this.set({
      'board': board
    });
  },
  updateStatus: function(status) {
    return this.set({
      'status': status
    });
  },
  updateGameWithResponseData: function(response, game) {
    game.set({
      'board': response.board
    });
    return game.set({
      'status': response.status
    });
  },
  computerMove: function() {
    var client, data, json;
    json = {
      board: this.get('board'),
      gameType: "humanVsComputer",
      computerDifficulty: "hard"
    };
    data = JSON.stringify(json);
    client = this.get('client');
    return client.postUpdatedGame(data, this, this.updateGameWithResponseData);
  },
  resetAttributes: function() {
    this.set(this.defaults);
    return this.set({
      'board': ['', '', '', '', '', '', '', '', '']
    });
  }
});

module.exports = Game;
